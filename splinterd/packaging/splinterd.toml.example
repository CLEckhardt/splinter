# Copyright 2018-2021 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Config file format version
version = "1"

# Specifies the directory containing Splinter configuration files.
#config_dir = "/etc/splinter"

# Specifies the storage directory for Splinter state. This option overrides the
# SPLINTER_STATE_DIR environment variable, if set.
#state_dir = "/var/lib/splinter"

# Specifies the database used for Splinter state.
#database = "splinter_state.db"

# Where scabbard will store its internal state; valid options are
# "database" or "lmdb". When set to "database" scabbard state will be stored in
# in the database specified by the database key above. When set to "lmdb", lmdb
# files will be created in the Splinter state_dir.
#scabbard_storage = "database"

# Identifier for this node. Must be unique on the network. This value will be
# used to initialize a "node_id" file in the Splinter state directory. Once
# node_id is created, the value in the configuration below must match the
# contents of node_id. If they differ, splinterd will not start.
#node_id = ""

# Specifies a human-readable name for the node
#display_name = ""

# Endpoints used for daemon to daemon communication. Transport type is
# determined by the protocol prefix. Use tcp:// for TCP connections and tcps://
# for TLS connections
#network_endpoints = ["tcps://127.0.0.1:8044"]

# Specifies the connection endpoint for the REST API. This value must be
# prefixed with the protocol (http://) or splinterd will not start.
#rest_api_endpoint = "http://127.0.0.1:8080"

# Specifies the public network endpoint for daemon-to-daemon communication
# between Splinter nodes, if the network endpoint is not public.
#advertised_endpoints = ""

# A comma separated list of splinter nodes the daemon will automatically
# attempt to connect to on start up. If the authorization type used must be
# trust add +trust after the protocol prefix.
# example: peers = [
#   "tcps://acme-node-001:8044",
#   "tcps+trust://acme-node-002:8044"
# ]
#peers = []

# The name of the key that should be used to connect to the peers using
# challenge authorization
#peering_key = "splinterd"

# Specifies how often, in seconds, to send a heartbeat. This heartbeat is used
# to check the health of connections to other Splinter nodes. Use 0 to turn
# off the heartbeat.
#heartbeat = 30

# Sets the coordinator timeout, in seconds, for admin service proposals. This
# setting affects consensus-related activities for pending circuit changes
# (functions that use the two-phase commit agreement protocol in the Scabbard
# service).
#admin_timeout = 30

# Sets the file for allowable keys. Can be absolute or relative. Relative files
# are relative to the config directory. Defaults to "allow_keys".
#allow_keys_file = "allow_keys"

#
# Registry Options
#

# Specifies one or more read-only Splinter registry files.
#registries = ["file:///etc/splinter/registry.yaml"]

# Specifies how often, in seconds, to fetch remote node registry changes in the
# background. Use 0 to turn off automatic refreshes.
#registry_auto_refresh = 600

# Specifies how often, in seconds, to fetch remote node registry changes on
# read. Use 0 to turn off forced refreshes.
#registry_forced_refresh = 10


#
# TLS Options
#

# Specifies the directory containing Splinter certificate files.
#tls_cert_dir = "/etc/splinter/certs"

# List of certificate authority certificates (*.pem files).
#tls_ca_file = "/etc/splinter/certs/ca.pem"

# A certificate signed by a certificate authority. Used by the daemon when it
# is acting as a client (sending messages)
#tls_client_cert = "/etc/splinter/certs/client.crt"

# Private key used by daemon when it is acting as a client
#tls_client_key = "/etc/splinter/certs/private/client.key"

# A certificate signed by a certificate authority. Used by the daemon when it
# is acting as a server (receiving messages).
#tls_server_cert = "/etc/splinter/certs/server.crt"

# Private key used by daemon when it is acting as a server.
#tls_server_key = "/etc/splinter/certs/private/server.key"


#
# OAuth Options
#

# Specifies which OAuth provider to use.
# Options are azure, github, google, or openid.
#oauth_provider = ""

# Your OAuth client ID, provided by the OAuth provider.
#oauth_client_id = ""

# Your OAuth client secret, provided by the OAuth provider.
#oauth_client_secret = ""

# The URL of the Splinter REST APIâ€™s callback endpoint.
#oauth_redirect_url = ""

# The URL of the provider's OpenID discovery document.
# This is only used when the OAuth provider is Azure or OpenID.
#oauth_openid_url = ""

# Any additional parameters to include in the authorization request
# to an OAuth OpenID provider.
#oauth_openid_auth_params = ""

# Additional scopes to request from an OAuth OpenID provider.
#oauth_openid_scopes = ""


#
# Metrics Options
#

# The HTTP or UDP URL for your InfluxDB instance.
#influx_url = ""

# The target database for metrics.
#influx_db = ""

# A username with write access to the database specified above.
#influx_username = ""
#influx_password = ""

#
# Logging Options
#

# The stdout appender is the only default appender.
#[appenders.stdout]

# "kind" options are stdout,stderr,file,rolling_file
#kind = "stdout"
# Pattern controls the formatting of each log message.
#pattern = "[ {d(%Y-%m-%d %H:%M:%S%.3f)}] T[{T}] {l} [{M}] {m}\n"

#[appenders.rolling_file]

#kind = "rolling_file"
# Filename is specific to rolling_file and file appenders and is simply a path to a file.
# Must be specified.
#filename = "/var/log/splinter/splinterd.log"
# Size is specific to rolling_file and specifies when the file should be rolled/overwritten.
# Must be specified.
#size = "16.0M"

# Loggers form the connection between code and the appenders.
# By default there is a single "root" logger that logs to the "stdout" appender,
#[loggers.splinter]

# The appenders field is a list of defined appender names.
#appenders = [ "stdout", "rolling_file"]

# Level defines the level of log the logger writes to appenders.
# Valid options are, Trace, Debug, Info, Warn, and Error in decreasing order of verbosity.
#level = "Warn"
