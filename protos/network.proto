// Copyright 2019 Cargill Incorporated
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

message NetworkMessage {
    // The message type for the payload
    NetworkMessageType message_type = 1;

    // either a message defined below or another message envelope
    bytes payload = 2;
}

enum NetworkMessageType {
    UNSET_MESSAGE_TYPE = 0;

    // Network Message
    NETWORK_ERROR = 1;
    NETWORK_REQUEST = 2;
    NETWORK_RESPONSE = 3;
    NETWORK_ECHO = 4;

    // Message types that indicate that the payload is another message envelope
    CIRCUIT = 100;
    AUTHORIZATION = 101 ;
}

message NetworkError{
    enum NetworkError {
        UNSET_ERROR = 0;
        ERROR_COULD_NOT_DELIVER = 1;
        ERROR_QUEUE_FULL = 2;
    }

    // id that correlates response to a request
    string correlation_id = 1;

    // enum of the network specific error that was encountered
    NetworkError error = 2;

    // explanation of the error
    string error_message = 3;
}

message NetworkRequest {
    // id of the sender of the message
    string sender = 1;

    // id of recipient of the message
    string recipient = 2;

    // the request
    bytes payload = 3;

    // id used to correlate the response with this request
    string correlation_id = 4;
}

message NetworkResponse {
    // id of the sender of the message
    string sender = 1;

    // id of recipient of the message
    string recipient = 2;

    // the response
    bytes payload = 3;

    // id used to correlate the response with this request
    string correlation_id = 4;
}

// This message is used for debugging
message NetworkEcho {
    bytes payload = 1;
    string recipient = 2;
    int32 time_to_live = 3;
}
